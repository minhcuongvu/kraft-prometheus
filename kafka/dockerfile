# https://hub.docker.com/_/openjdk/tags?name=11-jre-slim
FROM openjdk:11-jre-slim-buster

# Set environment variables for Kafka
ENV KAFKA_VERSION=3.8.0
ENV SCALA_VERSION=2.13

# Install necessary tools and dependencies
RUN apt-get update && apt-get install -y wget gettext \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Download and extract Kafka binaries
RUN wget https://downloads.apache.org/kafka/${KAFKA_VERSION}/kafka_${SCALA_VERSION}-${KAFKA_VERSION}.tgz \
    && tar -xzf kafka_${SCALA_VERSION}-${KAFKA_VERSION}.tgz \
    && mv kafka_${SCALA_VERSION}-${KAFKA_VERSION} /opt/kafka \
    && rm kafka_${SCALA_VERSION}-${KAFKA_VERSION}.tgz

# Set working directory
WORKDIR /opt/kafka

# Copy KRaft server.properties with the correct listeners configuration
COPY server.properties.template ./config/kraft/server.properties.template

# https://github.com/prometheus/jmx_exporter/tree/release-1.0.1/docs
# https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/1.0.1/jmx_prometheus_javaagent-1.0.1.jar
# Copy JMX Prometheus Java Agent
COPY jmx_prometheus_javaagent-1.0.1.jar ./jmx_prometheus_javaagent-1.0.1.jar

# Copy JMX Exporter configuration file (ensure this file exists in the build context)
COPY kafka-jmx-exporter.yml ./kafka-jmx-exporter.yml

# Copy the entrypoint script
COPY entrypoint.sh ./entrypoint.sh

# Ensure the script is executable
RUN chmod +x ./entrypoint.sh

# Expose Kafka ports
# EXPOSE 9092 9093 7071

# Set up environment variables for Kafka
ENV KAFKA_HOME=/opt/kafka
ENV PATH=$PATH:$KAFKA_HOME/bin

# Set the entrypoint to the custom script
ENTRYPOINT ["/opt/kafka/entrypoint.sh"]