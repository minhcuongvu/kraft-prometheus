apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-broker-1
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-broker-1
  template:
    metadata:
      labels:
        app: kafka-broker-1
    spec:
      containers:
      - name: kafka-broker-1
        image: local.registry.com:32555/kafka:latest
        imagePullPolicy: Always
        env:
        - name: NODE_ID
          value: "11"
        - name: PORT
          value: "8081"  # Kafka metrics port
        - name: KAFKA_PROCESS_ROLES
          value: "broker"
        - name: KAFKA_LISTENERS
          value: "PLAINTEXT://0.0.0.0:9092"  # Listen on all network interfaces within the pod
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "advertised.listeners=PLAINTEXT://kafka-broker-1:9092"  # Advertise using the service name
        - name: KAFKA_QUORUM_VOTERS
          value: "1@kafka-controller-1:9092"
          # value: "1@kafka-controller-1:9092,2@kafka-controller-2:9092,3@kafka-controller-3:9092"
        - name: KAFKA_LOG_DIRS
          value: "/opt/kafka/data"
        ports:
        - containerPort: 8081
          name: metrics
        - containerPort: 9092
          name: controller
        volumeMounts:
        - mountPath: /opt/kafka/data
          name: kafka-broker-1-storage
      volumes:
      - name: kafka-broker-1-storage
        persistentVolumeClaim:
          claimName: kafka-broker-1-pvc
      imagePullSecrets:
      - name: privateregistry

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-broker-1
  namespace: kafka
spec:
  type: NodePort
  ports:
  - port: 8081
    targetPort: 8081
    name: metrics
  - port: 9092
    targetPort: 9092
    name: controller
  # - port: 9093
  #   targetPort: 9093
  #   name: controller
  selector:
    app: kafka-broker-1

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-broker-1-pvc
  namespace: kafka
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
      # storage: 1Gi
